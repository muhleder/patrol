// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: contracts.proto

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import "Contracts.pbrpc.h"
#import "Contracts.pbobjc.h"
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriter+Immediate.h>


@implementation PatrolAppService

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wobjc-designated-initializers"

// Designated initializer
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [super initWithHost:host
                 packageName:@"patrol"
                 serviceName:@"PatrolAppService"
                 callOptions:callOptions];
}

- (instancetype)initWithHost:(NSString *)host {
  return [super initWithHost:host
                 packageName:@"patrol"
                 serviceName:@"PatrolAppService"];
}

#pragma clang diagnostic pop

// Override superclass initializer to disallow different package and service names.
- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName {
  return [self initWithHost:host];
}

- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName
                 callOptions:(GRPCCallOptions *)callOptions {
  return [self initWithHost:host callOptions:callOptions];
}

#pragma mark - Class Methods

+ (instancetype)serviceWithHost:(NSString *)host {
  return [[self alloc] initWithHost:host];
}

+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [[self alloc] initWithHost:host callOptions:callOptions];
}

#pragma mark - Method Implementations

#pragma mark listDartTests(Empty) returns (ListDartTestsResponse)

- (void)listDartTestsWithRequest:(Empty *)request handler:(void(^)(ListDartTestsResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTolistDartTestsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTolistDartTestsWithRequest:(Empty *)request handler:(void(^)(ListDartTestsResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"listDartTests"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ListDartTestsResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)listDartTestsWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"listDartTests"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ListDartTestsResponse class]];
}

#pragma mark runDartTest(RunDartTestRequest) returns (RunDartTestResponse)

- (void)runDartTestWithRequest:(RunDartTestRequest *)request handler:(void(^)(RunDartTestResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTorunDartTestWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTorunDartTestWithRequest:(RunDartTestRequest *)request handler:(void(^)(RunDartTestResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"runDartTest"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[RunDartTestResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)runDartTestWithMessage:(RunDartTestRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"runDartTest"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[RunDartTestResponse class]];
}

@end
@implementation NativeAutomator

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wobjc-designated-initializers"

// Designated initializer
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [super initWithHost:host
                 packageName:@"patrol"
                 serviceName:@"NativeAutomator"
                 callOptions:callOptions];
}

- (instancetype)initWithHost:(NSString *)host {
  return [super initWithHost:host
                 packageName:@"patrol"
                 serviceName:@"NativeAutomator"];
}

#pragma clang diagnostic pop

// Override superclass initializer to disallow different package and service names.
- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName {
  return [self initWithHost:host];
}

- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName
                 callOptions:(GRPCCallOptions *)callOptions {
  return [self initWithHost:host callOptions:callOptions];
}

#pragma mark - Class Methods

+ (instancetype)serviceWithHost:(NSString *)host {
  return [[self alloc] initWithHost:host];
}

+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [[self alloc] initWithHost:host callOptions:callOptions];
}

#pragma mark - Method Implementations

#pragma mark initialize(Empty) returns (Empty)

- (void)initializeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToinitializeWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToinitializeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"initialize"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)initializeWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"initialize"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark configure(ConfigureRequest) returns (Empty)

- (void)configureWithRequest:(ConfigureRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToconfigureWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToconfigureWithRequest:(ConfigureRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"configure"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)configureWithMessage:(ConfigureRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"configure"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark pressHome(Empty) returns (Empty)

/**
 * general
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)pressHomeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTopressHomeWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * general
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCTopressHomeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"pressHome"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * general
 */
- (GRPCUnaryProtoCall *)pressHomeWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"pressHome"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark pressBack(Empty) returns (Empty)

- (void)pressBackWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTopressBackWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTopressBackWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"pressBack"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)pressBackWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"pressBack"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark pressRecentApps(Empty) returns (Empty)

- (void)pressRecentAppsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTopressRecentAppsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTopressRecentAppsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"pressRecentApps"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)pressRecentAppsWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"pressRecentApps"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark doublePressRecentApps(Empty) returns (Empty)

- (void)doublePressRecentAppsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTodoublePressRecentAppsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTodoublePressRecentAppsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"doublePressRecentApps"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)doublePressRecentAppsWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"doublePressRecentApps"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark openApp(OpenAppRequest) returns (Empty)

- (void)openAppWithRequest:(OpenAppRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToopenAppWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToopenAppWithRequest:(OpenAppRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"openApp"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)openAppWithMessage:(OpenAppRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"openApp"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark openQuickSettings(OpenQuickSettingsRequest) returns (Empty)

- (void)openQuickSettingsWithRequest:(OpenQuickSettingsRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToopenQuickSettingsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToopenQuickSettingsWithRequest:(OpenQuickSettingsRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"openQuickSettings"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)openQuickSettingsWithMessage:(OpenQuickSettingsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"openQuickSettings"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark getNativeViews(GetNativeViewsRequest) returns (GetNativeViewsResponse)

/**
 * general UI interaction
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getNativeViewsWithRequest:(GetNativeViewsRequest *)request handler:(void(^)(GetNativeViewsResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetNativeViewsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * general UI interaction
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCTogetNativeViewsWithRequest:(GetNativeViewsRequest *)request handler:(void(^)(GetNativeViewsResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getNativeViews"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetNativeViewsResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * general UI interaction
 */
- (GRPCUnaryProtoCall *)getNativeViewsWithMessage:(GetNativeViewsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getNativeViews"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetNativeViewsResponse class]];
}

#pragma mark tap(TapRequest) returns (Empty)

- (void)tapWithRequest:(TapRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTotapWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTotapWithRequest:(TapRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"tap"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)tapWithMessage:(TapRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"tap"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark doubleTap(TapRequest) returns (Empty)

- (void)doubleTapWithRequest:(TapRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTodoubleTapWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTodoubleTapWithRequest:(TapRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"doubleTap"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)doubleTapWithMessage:(TapRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"doubleTap"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark enterText(EnterTextRequest) returns (Empty)

- (void)enterTextWithRequest:(EnterTextRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToenterTextWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToenterTextWithRequest:(EnterTextRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"enterText"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)enterTextWithMessage:(EnterTextRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"enterText"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark swipe(SwipeRequest) returns (Empty)

- (void)swipeWithRequest:(SwipeRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToswipeWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToswipeWithRequest:(SwipeRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"swipe"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)swipeWithMessage:(SwipeRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"swipe"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark waitUntilVisible(WaitUntilVisibleRequest) returns (Empty)

- (void)waitUntilVisibleWithRequest:(WaitUntilVisibleRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTowaitUntilVisibleWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTowaitUntilVisibleWithRequest:(WaitUntilVisibleRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"waitUntilVisible"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)waitUntilVisibleWithMessage:(WaitUntilVisibleRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"waitUntilVisible"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark enableAirplaneMode(Empty) returns (Empty)

/**
 * services
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)enableAirplaneModeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToenableAirplaneModeWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * services
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToenableAirplaneModeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"enableAirplaneMode"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * services
 */
- (GRPCUnaryProtoCall *)enableAirplaneModeWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"enableAirplaneMode"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark disableAirplaneMode(Empty) returns (Empty)

- (void)disableAirplaneModeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTodisableAirplaneModeWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTodisableAirplaneModeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"disableAirplaneMode"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)disableAirplaneModeWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"disableAirplaneMode"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark enableWiFi(Empty) returns (Empty)

- (void)enableWiFiWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToenableWiFiWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToenableWiFiWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"enableWiFi"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)enableWiFiWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"enableWiFi"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark disableWiFi(Empty) returns (Empty)

- (void)disableWiFiWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTodisableWiFiWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTodisableWiFiWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"disableWiFi"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)disableWiFiWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"disableWiFi"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark enableCellular(Empty) returns (Empty)

- (void)enableCellularWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToenableCellularWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToenableCellularWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"enableCellular"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)enableCellularWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"enableCellular"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark disableCellular(Empty) returns (Empty)

- (void)disableCellularWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTodisableCellularWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTodisableCellularWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"disableCellular"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)disableCellularWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"disableCellular"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark enableBluetooth(Empty) returns (Empty)

- (void)enableBluetoothWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToenableBluetoothWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToenableBluetoothWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"enableBluetooth"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)enableBluetoothWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"enableBluetooth"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark disableBluetooth(Empty) returns (Empty)

- (void)disableBluetoothWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTodisableBluetoothWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTodisableBluetoothWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"disableBluetooth"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)disableBluetoothWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"disableBluetooth"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark enableDarkMode(DarkModeRequest) returns (Empty)

- (void)enableDarkModeWithRequest:(DarkModeRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToenableDarkModeWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToenableDarkModeWithRequest:(DarkModeRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"enableDarkMode"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)enableDarkModeWithMessage:(DarkModeRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"enableDarkMode"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark disableDarkMode(DarkModeRequest) returns (Empty)

- (void)disableDarkModeWithRequest:(DarkModeRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTodisableDarkModeWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTodisableDarkModeWithRequest:(DarkModeRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"disableDarkMode"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)disableDarkModeWithMessage:(DarkModeRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"disableDarkMode"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark openNotifications(Empty) returns (Empty)

/**
 * notifications
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)openNotificationsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToopenNotificationsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * notifications
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToopenNotificationsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"openNotifications"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * notifications
 */
- (GRPCUnaryProtoCall *)openNotificationsWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"openNotifications"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark closeNotifications(Empty) returns (Empty)

- (void)closeNotificationsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTocloseNotificationsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTocloseNotificationsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"closeNotifications"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)closeNotificationsWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"closeNotifications"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark closeHeadsUpNotification(Empty) returns (Empty)

- (void)closeHeadsUpNotificationWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTocloseHeadsUpNotificationWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTocloseHeadsUpNotificationWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"closeHeadsUpNotification"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)closeHeadsUpNotificationWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"closeHeadsUpNotification"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark getNotifications(GetNotificationsRequest) returns (GetNotificationsResponse)

- (void)getNotificationsWithRequest:(GetNotificationsRequest *)request handler:(void(^)(GetNotificationsResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetNotificationsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetNotificationsWithRequest:(GetNotificationsRequest *)request handler:(void(^)(GetNotificationsResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getNotifications"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetNotificationsResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getNotificationsWithMessage:(GetNotificationsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getNotifications"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetNotificationsResponse class]];
}

#pragma mark tapOnNotification(TapOnNotificationRequest) returns (Empty)

- (void)tapOnNotificationWithRequest:(TapOnNotificationRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTotapOnNotificationWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTotapOnNotificationWithRequest:(TapOnNotificationRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"tapOnNotification"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)tapOnNotificationWithMessage:(TapOnNotificationRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"tapOnNotification"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark isPermissionDialogVisible(PermissionDialogVisibleRequest) returns (PermissionDialogVisibleResponse)

/**
 * permissions
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)isPermissionDialogVisibleWithRequest:(PermissionDialogVisibleRequest *)request handler:(void(^)(PermissionDialogVisibleResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToisPermissionDialogVisibleWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * permissions
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToisPermissionDialogVisibleWithRequest:(PermissionDialogVisibleRequest *)request handler:(void(^)(PermissionDialogVisibleResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"isPermissionDialogVisible"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[PermissionDialogVisibleResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * permissions
 */
- (GRPCUnaryProtoCall *)isPermissionDialogVisibleWithMessage:(PermissionDialogVisibleRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"isPermissionDialogVisible"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[PermissionDialogVisibleResponse class]];
}

#pragma mark handlePermissionDialog(HandlePermissionRequest) returns (Empty)

- (void)handlePermissionDialogWithRequest:(HandlePermissionRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTohandlePermissionDialogWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTohandlePermissionDialogWithRequest:(HandlePermissionRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"handlePermissionDialog"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)handlePermissionDialogWithMessage:(HandlePermissionRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"handlePermissionDialog"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark setLocationAccuracy(SetLocationAccuracyRequest) returns (Empty)

- (void)setLocationAccuracyWithRequest:(SetLocationAccuracyRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTosetLocationAccuracyWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTosetLocationAccuracyWithRequest:(SetLocationAccuracyRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"setLocationAccuracy"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)setLocationAccuracyWithMessage:(SetLocationAccuracyRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"setLocationAccuracy"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark debug(Empty) returns (Empty)

/**
 * other
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)debugWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTodebugWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * other
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCTodebugWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"debug"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * other
 */
- (GRPCUnaryProtoCall *)debugWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"debug"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

#pragma mark markPatrolAppServiceReady(Empty) returns (Empty)

/**
 * TODO(bartekpacia): Move this RPC into a new PatrolNativeTestService service because it doesn't fit here
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)markPatrolAppServiceReadyWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTomarkPatrolAppServiceReadyWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * TODO(bartekpacia): Move this RPC into a new PatrolNativeTestService service because it doesn't fit here
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCTomarkPatrolAppServiceReadyWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"markPatrolAppServiceReady"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Empty class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * TODO(bartekpacia): Move this RPC into a new PatrolNativeTestService service because it doesn't fit here
 */
- (GRPCUnaryProtoCall *)markPatrolAppServiceReadyWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"markPatrolAppServiceReady"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Empty class]];
}

@end
#endif
