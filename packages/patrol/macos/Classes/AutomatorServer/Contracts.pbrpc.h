// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: contracts.proto

#import <Foundation/Foundation.h>

#if !defined(GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO) || !GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO
#import "Contracts.pbobjc.h"
#endif

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import <ProtoRPC/ProtoService.h>
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriteable.h>
#import <RxLibrary/GRXWriter.h>
#endif

@class ConfigureRequest;
@class DarkModeRequest;
@class Empty;
@class EnterTextRequest;
@class GetNativeViewsRequest;
@class GetNativeViewsResponse;
@class GetNotificationsRequest;
@class GetNotificationsResponse;
@class HandlePermissionRequest;
@class ListDartTestsResponse;
@class OpenAppRequest;
@class OpenQuickSettingsRequest;
@class PermissionDialogVisibleRequest;
@class PermissionDialogVisibleResponse;
@class RunDartTestRequest;
@class RunDartTestResponse;
@class SetLocationAccuracyRequest;
@class SwipeRequest;
@class TapOnNotificationRequest;
@class TapRequest;
@class WaitUntilVisibleRequest;

#if !defined(GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO) || !GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO
#endif

@class GRPCUnaryProtoCall;
@class GRPCStreamingProtoCall;
@class GRPCCallOptions;
@protocol GRPCProtoResponseHandler;
@class GRPCProtoCall;


NS_ASSUME_NONNULL_BEGIN

@protocol PatrolAppService2 <NSObject>

#pragma mark listDartTests(Empty) returns (ListDartTestsResponse)

- (GRPCUnaryProtoCall *)listDartTestsWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark runDartTest(RunDartTestRequest) returns (RunDartTestResponse)

- (GRPCUnaryProtoCall *)runDartTestWithMessage:(RunDartTestRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

@end

@protocol NativeAutomator2 <NSObject>

#pragma mark initialize(Empty) returns (Empty)

- (GRPCUnaryProtoCall *)initializeWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark configure(ConfigureRequest) returns (Empty)

- (GRPCUnaryProtoCall *)configureWithMessage:(ConfigureRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark pressHome(Empty) returns (Empty)

/**
 * general
 */
- (GRPCUnaryProtoCall *)pressHomeWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark pressBack(Empty) returns (Empty)

- (GRPCUnaryProtoCall *)pressBackWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark pressRecentApps(Empty) returns (Empty)

- (GRPCUnaryProtoCall *)pressRecentAppsWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark doublePressRecentApps(Empty) returns (Empty)

- (GRPCUnaryProtoCall *)doublePressRecentAppsWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark openApp(OpenAppRequest) returns (Empty)

- (GRPCUnaryProtoCall *)openAppWithMessage:(OpenAppRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark openQuickSettings(OpenQuickSettingsRequest) returns (Empty)

- (GRPCUnaryProtoCall *)openQuickSettingsWithMessage:(OpenQuickSettingsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark getNativeViews(GetNativeViewsRequest) returns (GetNativeViewsResponse)

/**
 * general UI interaction
 */
- (GRPCUnaryProtoCall *)getNativeViewsWithMessage:(GetNativeViewsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark tap(TapRequest) returns (Empty)

- (GRPCUnaryProtoCall *)tapWithMessage:(TapRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark doubleTap(TapRequest) returns (Empty)

- (GRPCUnaryProtoCall *)doubleTapWithMessage:(TapRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark enterText(EnterTextRequest) returns (Empty)

- (GRPCUnaryProtoCall *)enterTextWithMessage:(EnterTextRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark swipe(SwipeRequest) returns (Empty)

- (GRPCUnaryProtoCall *)swipeWithMessage:(SwipeRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark waitUntilVisible(WaitUntilVisibleRequest) returns (Empty)

- (GRPCUnaryProtoCall *)waitUntilVisibleWithMessage:(WaitUntilVisibleRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark enableAirplaneMode(Empty) returns (Empty)

/**
 * services
 */
- (GRPCUnaryProtoCall *)enableAirplaneModeWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark disableAirplaneMode(Empty) returns (Empty)

- (GRPCUnaryProtoCall *)disableAirplaneModeWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark enableWiFi(Empty) returns (Empty)

- (GRPCUnaryProtoCall *)enableWiFiWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark disableWiFi(Empty) returns (Empty)

- (GRPCUnaryProtoCall *)disableWiFiWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark enableCellular(Empty) returns (Empty)

- (GRPCUnaryProtoCall *)enableCellularWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark disableCellular(Empty) returns (Empty)

- (GRPCUnaryProtoCall *)disableCellularWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark enableBluetooth(Empty) returns (Empty)

- (GRPCUnaryProtoCall *)enableBluetoothWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark disableBluetooth(Empty) returns (Empty)

- (GRPCUnaryProtoCall *)disableBluetoothWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark enableDarkMode(DarkModeRequest) returns (Empty)

- (GRPCUnaryProtoCall *)enableDarkModeWithMessage:(DarkModeRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark disableDarkMode(DarkModeRequest) returns (Empty)

- (GRPCUnaryProtoCall *)disableDarkModeWithMessage:(DarkModeRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark openNotifications(Empty) returns (Empty)

/**
 * notifications
 */
- (GRPCUnaryProtoCall *)openNotificationsWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark closeNotifications(Empty) returns (Empty)

- (GRPCUnaryProtoCall *)closeNotificationsWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark closeHeadsUpNotification(Empty) returns (Empty)

- (GRPCUnaryProtoCall *)closeHeadsUpNotificationWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark getNotifications(GetNotificationsRequest) returns (GetNotificationsResponse)

- (GRPCUnaryProtoCall *)getNotificationsWithMessage:(GetNotificationsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark tapOnNotification(TapOnNotificationRequest) returns (Empty)

- (GRPCUnaryProtoCall *)tapOnNotificationWithMessage:(TapOnNotificationRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark isPermissionDialogVisible(PermissionDialogVisibleRequest) returns (PermissionDialogVisibleResponse)

/**
 * permissions
 */
- (GRPCUnaryProtoCall *)isPermissionDialogVisibleWithMessage:(PermissionDialogVisibleRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark handlePermissionDialog(HandlePermissionRequest) returns (Empty)

- (GRPCUnaryProtoCall *)handlePermissionDialogWithMessage:(HandlePermissionRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark setLocationAccuracy(SetLocationAccuracyRequest) returns (Empty)

- (GRPCUnaryProtoCall *)setLocationAccuracyWithMessage:(SetLocationAccuracyRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark debug(Empty) returns (Empty)

/**
 * other
 */
- (GRPCUnaryProtoCall *)debugWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark markPatrolAppServiceReady(Empty) returns (Empty)

/**
 * TODO(bartekpacia): Move this RPC into a new PatrolNativeTestService service because it doesn't fit here
 */
- (GRPCUnaryProtoCall *)markPatrolAppServiceReadyWithMessage:(Empty *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

@end

/**
 * The methods in this protocol belong to a set of old APIs that have been deprecated. They do not
 * recognize call options provided in the initializer. Using the v2 protocol is recommended.
 */
@protocol PatrolAppService <NSObject>

#pragma mark listDartTests(Empty) returns (ListDartTestsResponse)

- (void)listDartTestsWithRequest:(Empty *)request handler:(void(^)(ListDartTestsResponse *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTolistDartTestsWithRequest:(Empty *)request handler:(void(^)(ListDartTestsResponse *_Nullable response, NSError *_Nullable error))handler;


#pragma mark runDartTest(RunDartTestRequest) returns (RunDartTestResponse)

- (void)runDartTestWithRequest:(RunDartTestRequest *)request handler:(void(^)(RunDartTestResponse *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTorunDartTestWithRequest:(RunDartTestRequest *)request handler:(void(^)(RunDartTestResponse *_Nullable response, NSError *_Nullable error))handler;


@end

/**
 * The methods in this protocol belong to a set of old APIs that have been deprecated. They do not
 * recognize call options provided in the initializer. Using the v2 protocol is recommended.
 */
@protocol NativeAutomator <NSObject>

#pragma mark initialize(Empty) returns (Empty)

- (void)initializeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToinitializeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark configure(ConfigureRequest) returns (Empty)

- (void)configureWithRequest:(ConfigureRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToconfigureWithRequest:(ConfigureRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark pressHome(Empty) returns (Empty)

/**
 * general
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)pressHomeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

/**
 * general
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCTopressHomeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark pressBack(Empty) returns (Empty)

- (void)pressBackWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTopressBackWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark pressRecentApps(Empty) returns (Empty)

- (void)pressRecentAppsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTopressRecentAppsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark doublePressRecentApps(Empty) returns (Empty)

- (void)doublePressRecentAppsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTodoublePressRecentAppsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark openApp(OpenAppRequest) returns (Empty)

- (void)openAppWithRequest:(OpenAppRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToopenAppWithRequest:(OpenAppRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark openQuickSettings(OpenQuickSettingsRequest) returns (Empty)

- (void)openQuickSettingsWithRequest:(OpenQuickSettingsRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToopenQuickSettingsWithRequest:(OpenQuickSettingsRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark getNativeViews(GetNativeViewsRequest) returns (GetNativeViewsResponse)

/**
 * general UI interaction
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getNativeViewsWithRequest:(GetNativeViewsRequest *)request handler:(void(^)(GetNativeViewsResponse *_Nullable response, NSError *_Nullable error))handler;

/**
 * general UI interaction
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCTogetNativeViewsWithRequest:(GetNativeViewsRequest *)request handler:(void(^)(GetNativeViewsResponse *_Nullable response, NSError *_Nullable error))handler;


#pragma mark tap(TapRequest) returns (Empty)

- (void)tapWithRequest:(TapRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTotapWithRequest:(TapRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark doubleTap(TapRequest) returns (Empty)

- (void)doubleTapWithRequest:(TapRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTodoubleTapWithRequest:(TapRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark enterText(EnterTextRequest) returns (Empty)

- (void)enterTextWithRequest:(EnterTextRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToenterTextWithRequest:(EnterTextRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark swipe(SwipeRequest) returns (Empty)

- (void)swipeWithRequest:(SwipeRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToswipeWithRequest:(SwipeRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark waitUntilVisible(WaitUntilVisibleRequest) returns (Empty)

- (void)waitUntilVisibleWithRequest:(WaitUntilVisibleRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTowaitUntilVisibleWithRequest:(WaitUntilVisibleRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark enableAirplaneMode(Empty) returns (Empty)

/**
 * services
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)enableAirplaneModeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

/**
 * services
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToenableAirplaneModeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark disableAirplaneMode(Empty) returns (Empty)

- (void)disableAirplaneModeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTodisableAirplaneModeWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark enableWiFi(Empty) returns (Empty)

- (void)enableWiFiWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToenableWiFiWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark disableWiFi(Empty) returns (Empty)

- (void)disableWiFiWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTodisableWiFiWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark enableCellular(Empty) returns (Empty)

- (void)enableCellularWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToenableCellularWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark disableCellular(Empty) returns (Empty)

- (void)disableCellularWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTodisableCellularWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark enableBluetooth(Empty) returns (Empty)

- (void)enableBluetoothWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToenableBluetoothWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark disableBluetooth(Empty) returns (Empty)

- (void)disableBluetoothWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTodisableBluetoothWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark enableDarkMode(DarkModeRequest) returns (Empty)

- (void)enableDarkModeWithRequest:(DarkModeRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToenableDarkModeWithRequest:(DarkModeRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark disableDarkMode(DarkModeRequest) returns (Empty)

- (void)disableDarkModeWithRequest:(DarkModeRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTodisableDarkModeWithRequest:(DarkModeRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark openNotifications(Empty) returns (Empty)

/**
 * notifications
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)openNotificationsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

/**
 * notifications
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToopenNotificationsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark closeNotifications(Empty) returns (Empty)

- (void)closeNotificationsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTocloseNotificationsWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark closeHeadsUpNotification(Empty) returns (Empty)

- (void)closeHeadsUpNotificationWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTocloseHeadsUpNotificationWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark getNotifications(GetNotificationsRequest) returns (GetNotificationsResponse)

- (void)getNotificationsWithRequest:(GetNotificationsRequest *)request handler:(void(^)(GetNotificationsResponse *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTogetNotificationsWithRequest:(GetNotificationsRequest *)request handler:(void(^)(GetNotificationsResponse *_Nullable response, NSError *_Nullable error))handler;


#pragma mark tapOnNotification(TapOnNotificationRequest) returns (Empty)

- (void)tapOnNotificationWithRequest:(TapOnNotificationRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTotapOnNotificationWithRequest:(TapOnNotificationRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark isPermissionDialogVisible(PermissionDialogVisibleRequest) returns (PermissionDialogVisibleResponse)

/**
 * permissions
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)isPermissionDialogVisibleWithRequest:(PermissionDialogVisibleRequest *)request handler:(void(^)(PermissionDialogVisibleResponse *_Nullable response, NSError *_Nullable error))handler;

/**
 * permissions
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToisPermissionDialogVisibleWithRequest:(PermissionDialogVisibleRequest *)request handler:(void(^)(PermissionDialogVisibleResponse *_Nullable response, NSError *_Nullable error))handler;


#pragma mark handlePermissionDialog(HandlePermissionRequest) returns (Empty)

- (void)handlePermissionDialogWithRequest:(HandlePermissionRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTohandlePermissionDialogWithRequest:(HandlePermissionRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark setLocationAccuracy(SetLocationAccuracyRequest) returns (Empty)

- (void)setLocationAccuracyWithRequest:(SetLocationAccuracyRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCTosetLocationAccuracyWithRequest:(SetLocationAccuracyRequest *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark debug(Empty) returns (Empty)

/**
 * other
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)debugWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

/**
 * other
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCTodebugWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


#pragma mark markPatrolAppServiceReady(Empty) returns (Empty)

/**
 * TODO(bartekpacia): Move this RPC into a new PatrolNativeTestService service because it doesn't fit here
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)markPatrolAppServiceReadyWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;

/**
 * TODO(bartekpacia): Move this RPC into a new PatrolNativeTestService service because it doesn't fit here
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCTomarkPatrolAppServiceReadyWithRequest:(Empty *)request handler:(void(^)(Empty *_Nullable response, NSError *_Nullable error))handler;


@end


#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
/**
 * Basic service implementation, over gRPC, that only does
 * marshalling and parsing.
 */
@interface PatrolAppService : GRPCProtoService<PatrolAppService2, PatrolAppService>
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions NS_DESIGNATED_INITIALIZER;
+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions;
// The following methods belong to a set of old APIs that have been deprecated.
- (instancetype)initWithHost:(NSString *)host;
+ (instancetype)serviceWithHost:(NSString *)host;
@end
/**
 * Basic service implementation, over gRPC, that only does
 * marshalling and parsing.
 */
@interface NativeAutomator : GRPCProtoService<NativeAutomator2, NativeAutomator>
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions NS_DESIGNATED_INITIALIZER;
+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions;
// The following methods belong to a set of old APIs that have been deprecated.
- (instancetype)initWithHost:(NSString *)host;
+ (instancetype)serviceWithHost:(NSString *)host;
@end
#endif

NS_ASSUME_NONNULL_END

